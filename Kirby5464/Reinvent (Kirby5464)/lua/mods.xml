<Layer Type = "Quad" ModCommand = "%prefix(function(self)
	
	for pn = 1, 2 do
		if plr[pn] then
			local p, pc, pj = plr[pn], plr[pn]:GetChild('Combo'), plr[pn]:GetChild('Judgment')
			local d = 0.25; if pn == 2 then d = 0.75 end
			-- actors['player' .. pn]:SetTarget(p)
			actors['player' .. pn .. 'combo']:SetTarget(pc)
			actors['player' .. pn .. 'judgment']:SetTarget(pj)
			-- p:hidden(1)
			pc:hidden(1)
			pj:hidden(1)
			
			pc:basezoomx(0.75)
			pc:basezoomy(0.75)
			pc:x(SCREEN_WIDTH*d)
			pc:y(SCREEN_HEIGHT*0.6)
			
			pj:basezoomx(0.75)
			pj:basezoomy(0.75)
			pj:x(SCREEN_WIDTH*d)
			pj:y(SCREEN_HEIGHT*0.5)
			
			pc:sleep(9e9)
			pj:sleep(9e9)
		end
	end
	
	
	local rinvent_loopVal, rinvent_perfVal = 200, 0
	local m_ea, m_ea2, mm = ease, ease_to, func
	
	--[[
	lists of eases that can be used:
	(Persistent)
		instant				linear
		inQuad				outQuad			inOutQuad			inCubic			outCubic
		inOutCubic			inQuart			outQuart			inOutQuart		inQuint
		outQuint			inOutQuint		inExpo				outExpo			inOutExpo
		inBack(amt)			outBack(amt)	inOutBack(amt)		inElastic(amt)	outElastic(amt)	
		inOutElastic(amt)	inBounce(amt)	outBounce(amt)		inOutBounce(amt)
	
	(Transient)
		bounce			bell			pop				kick(amt)		tooth
		tap				circ			square			tri				
		spike			cosc			sinc			inverse
	]]
	
	-- m_ea {start_beat, length, ease, percent1, mod1, ··· [, pn = playernum]}
	
	m_ea{0, 1, instant, 1, 'xmod', 100, 'dizzyholds', 100, 'stealthpastreceptors', -100, 'arrowpathdrawsizeback', 100, 'disablemines', 100, 'cover'}
	{33, 1, instant, 1, 'xmod'}
	{61, 3, inQuad, 100, 'reverse', 250, 'hallway', -100, 'centered', 100, 'arrowpath', 1000, 'zigzagoffset', 500, 'zigzagperiod', 1000, 'zigzagzoffset', 1000, 'zigzagzperiod'}
	{61, 3, inQuad, 1, 'xmod'}
	{102, 3, inverse, 628, 'dizzy'}
	{110, 3, inverse, -628, 'dizzy'}
	{128, 1, instant, 10, 'bounceoffset', 500, 'bounceperiod', 10, 'bouncezoffset', 500, 'bouncezperiod'}
	
	{129, 10, linear, 250, 'rinvent_bounce'}
	
	{135, 2, linear, 360, 'rotationy'}
	{143, 2, linear, -360, 'rotationy'}
	{151, 2, linear, 360, 'rotationy'}
	{159, 2, linear, -360, 'rotationy'}
	
	{159, 2, inQuad, 3000, 'centered'}
	{161, 1, instant, -100, 'reverse', -250, 'hallway', -100, 'arrowpath'}
	{162, 1, instant, -2.25, 'xmod'}
	{225, 1, instant, 1.25, 'xmod'}
	{225, 1, inQuad, -50, 'mini'}
	
	{241, 10, linear, -666, 'tiny'}
	{253, 3, linear, 666, 'tiny', 100, 'arrowpath', 90, 'rotationx', -157, 'confusionxoffset'}
	{253, 3, linear, 100, 'arrowpath'}
	-- {253, 317, square, 0, 'stealthgr', 0, 'stealthgg', 0, 'stealthgb', mode = 'end'}
	
	{253, 4, tap, -50, 'rotationx', 87, 'confusionxoffset'}
	
	-- {317, 1, linear, 100, 'drawsize'}
	
	{377, 6, linear, 300, 'rinvent_drunkincr'}
	
	drivendrop(1, 28, 4, 1)
	drivendrop(162, 66, 8, .75)
	drivendrop(257, 155, 155, 2)
	
	wiggle(1, 32, 4, tri, 100, 'tipsy')
	wiggle(1, 32, 4, tri, 22, 'confusionoffset')
	
	wiggle(37.5, 27.5, 7.5, bounce, 25, 'rotationx')
	wiggle(37.5, 27.5, 7.5, bell, 25, 'rotationy')
	wiggle(37.5, 27.5, 7.5, circ, 25, 'rotationz')
	
	wiggle(65, 64, 4, tri, 100, 'zigzag')
	wiggle(65, 64, 8, tri, 100, 'zigzagz')
	wiggle(65, 64, 8, tri, 5, 'rotationy')
	
	wiggle(97, 64, 8, tri, 60, 'x')
	
	wiggle(369, 7, .5, kick(4), 100, 'drunk')
	wiggle(369, 7, .5, kick(4), 100, 'tipsy')
	
	wiggle(377, 6, .25, tri, 1, 'drunk')
	
	wiggle0(162, 66, 8, outExpo, 100, 'reverse', 2)
	wiggle0(169, 66, 8, outExpo, 100, 'reverse', 1)
	
	wiggle0(365, 4, 1, outCubic, 100, 'invert')
	
	wiggle2lua(rinvent_break, kick(4), 100, 'drunk')
	wiggle2lua(rinvent_break, kick(4), 100, 'tipsy')
	
	--thxs chegg ~Kirby
	wiggle2lua(rinvent_jimmyboy, kick(4), 1, 'drunk')
	wiggle2lua(rinvent_jimmyboy, kick(4), 100, 'tipsy')
	
	-- m_ea2 {start_beat, length, ease, percent1, mod1, ··· [, pn = playernum]}	
	m_ea2{29, 3, tri, 100, 'zoomx'}
	-- {31, 2, inQuad, 0, 'zoomx'}
	
	--I'M KILLING THE CONDOR SYNDROME WOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO ~Kirby
	{99, 1, linear, 0, 'stealth'}
	{171, 1, linear, 0, 'stealth'}
	{181, 1, linear, 0, 'stealth'}
	{188, 1, linear, 0, 'stealth'}
	{205, 1, linear, 0, 'stealth'}
	{213, 1, linear, 0, 'stealth'}
	{219, 1, linear, 0, 'stealth'}
	--I'M KILLING THE CONDOR SYNDROME WOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO ~Kirby
	
	{161, 1, instant, 0, 'centered', 50, 'mini'}
	{161, 2, linear, 0, 'rinvent_bounce'}
	{317, 3, outExpo, 0, 'zigzag', 0, 'zigzagz'}
	{320, 3, instant, 0, 'zigzagperiod', 0, 'zigzagzperiod'}
	{320, 3, instant, 0, 'zigzagoffset', 0, 'zigzagzoffset', pn = 1}
	{320, 3, instant, 0, 'zigzagoffset', 0, 'zigzagzoffset', pn = 2}
	{397, 4, inQuad, 100, 'stealth', 100, 'dark', 0, 'arrowpath'}
	
	local period = 1000
	m_ea2{257, 4, outExpo, 160, 'x', period * .25, 'zigzagoffset', period * .5, 'zigzagzoffset', pn = 1}
	{257, 4, outExpo, -160, 'x', period * .75, 'zigzagoffset', period * 1, 'zigzagzoffset', pn = 2}
	-- period = period / 2
	{257, 4, outExpo, 500, 'zigzag', 500, 'zigzagz', period - 300, 'zigzagperiod', period - 300, 'zigzagzperiod'}
	{257, 144, linear, -144 * 200, 'movey'}
	
	{317, 3, instant, period * .25, 'bumpyxoffset', period * .5, 'bumpyoffset', pn = 1}
	{317, 3, instant, period * .75, 'bumpyxoffset', period * 1, 'bumpyoffset', pn = 2}
	{317, 3, outExpo, 500, 'bumpyx', 500, 'bumpy'}
	{317, 3, instant, period, 'bumpyxperiod', period, 'bumpyperiod'}
	
	for beat=71,88,8 do
		m_ea2{beat, 3, bell, 150, 'zoomx'}
	end
	
	for beat=33,64,.5 do
		-- local rinventCol = math.mod(beat * 3, 4)
		local rinventCol = math.floor(math.mod(beat * 3, 4))
		m_ea2{beat, .25, tooth, -400, 'tiny'..rinventCol..''}
		{beat, .25, tooth, 100, 'arrowpath'..rinventCol..''}
		{beat, .25, tooth, rinvent_loopVal, 'bumpyx'..rinventCol..''}
		-- print(rinventCol)
		rinvent_loopVal = -rinvent_loopVal
	end
	
	for beat=201,222,20 do
		m_ea{beat, 2, tri, -300, 'tiny'}
	end
	
	rinvent_kick={{64,125},{258,316},{322,369},{386,401}}
	
	for i,v in pairs(rinvent_kick) do
		for beat=v[1],v[2],2 do
			m_ea2{beat, 1, kick(3), -500, 'tiny'}
		end
	end
	
	for i = 1,table.getn(rinvent_stealth) do
		local beat = rinvent_stealth[i]
		local rinvent_length = rinvent_stealth[4].length
		m_ea2{beat[1], 1, outQuad, 55, 'stealth'}
		{beat[1]+6, rinvent_length*2, outQuad, 0, 'stealth'}
	end
	
	--thxs bun ~Kirby
	for i = 1,table.getn(rinvent_deemo) do
		local beat = rinvent_deemo[i]
		m_ea2{beat[1], 1, kick(6), -500, 'tiny'}
	end
	
	for i = 1,table.getn(rinvent_piano) do
		local beat = rinvent_piano[i]
		-- local rinventCol = math.mod(beat[1] * 3, 4)
		local rinventCol = math.floor(math.mod(beat[1] * 3, 4))
		m_ea2{beat[1], 1, bell, -100, 'movez'..rinventCol..''}
	end
	
	for i = 1,table.getn(rinvent_blink) do
		local beat = rinvent_blink[i]
		m_ea2{beat[1], 4, tri, rinvent_loopVal, 'drunk'}
		{beat[1], 4, tri, rinvent_loopVal, 'tipsy'}
		{beat[1], 4, tri, 157, 'confusionoffset'}
		rinvent_loopVal = -rinvent_loopVal
	end
	
	-- mm {start_beat, [end_beat,] function}
	-- can be used as perframe or mod_action
	mm{0, function(beat) 
	    for pn = 1, MAX_PN do
	        plr[pn]:GetChild('Judgment'):hidden(1)
			plr[pn]:GetChild('Combo'):hidden(1)
	    end
	end}
	{1, function(beat) 
	    MESSAGEMAN:Broadcast('Beat')
	end}
	{29, function(beat) 
	    for pn = 1, MAX_PN do
	        plr[pn]:linear(1)
	        plr[pn]:x(scx)
	    end
	end}
	-- mm{65, 129, function(beat, mods)
		-- all players
		-- mods[0].zigzag = math.sin(beat*math.pi*0.5)*rinvent_perfVal
		-- mods[0].zigzagz = math.cos(beat*math.pi*0.25)*rinvent_perfVal
		-- if rinvent_perfVal < 250 then
			-- rinvent_perfVal = rinvent_perfVal + 1
		-- end
		-- if beat > 128 then
			-- rinvent_perfVal = rinvent_perfVal - 250
		-- end
	-- end, mode = 'end'}
	{161, function(beat) 
	    if plr[1] then
			plr[1]:x(SCREEN_WIDTH/4)
		end
		if plr[2] then
			plr[2]:x(SCREEN_WIDTH*3/4)
		end
	end}
	{129, 162, function(beat, mods)
        -- all players
        mods = mods[0]
        
        -- bounce effect
        mods.bounce = math.sin(beat*math.pi*0.5) * mods.rinvent_bounce *2 
        mods.bouncez = math.cos(beat*math.pi*0.25) * mods.rinvent_bounce * 2
       
        -- rotationy has counteracting confusionyoffset
        mods.confusionyoffset = -100*math.rad(mods.rotationy)
    
	end, mode = 'end'}
	-- {253, 256, function(beat)
        -- print(outQuad(beat / 3))
        -- actors.rinvent_quad:diffusealpha(outQuad(beat / 3))
    -- end, mode = 'end'}
    -- {257, function(beat) 
        -- MESSAGEMAN:Broadcast('WhiteFlash')
    -- end}
	{377, 7, function(beat, mods)
		mods = mods[0]
		mods.drunk = mods.drunk * mods.rinvent_drunkincr
	end}
	
	ease_var('zoom', function(percent) return '*9e9 ' .. percent + 100 .. ' zoom' end)
	ease_var('zoomx', function(percent) return '*9e9 ' .. percent + 100 .. ' zoomx' end)
	ease_var('zoomy', function(percent) return '*9e9 ' .. percent + 100 .. ' zoomy' end)
	ease_var('zoomz', function(percent) return '*9e9 ' .. percent + 100 .. ' zoomz' end)
	
	ease_var('rinvent_bounce')
	ease_var('rinvent_drunkincr')
	
end)"/>

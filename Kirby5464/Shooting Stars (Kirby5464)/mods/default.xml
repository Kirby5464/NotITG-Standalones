<ActorFrame
InitCommand="%function(self)

	nitg_version = FUCK_EXE and tonumber(GAMESTATE:GetVersionDate()) >= 20170313
	
	if not nitg_version then
		SCREENMAN:SystemMessage('Outdated version of NotITG detected, mods will not work.');
	end
	
	songName = GAMESTATE:GetCurrentSong():GetSongDir();
	
	m_bl = 62.5/125 --use this to define length of a beat for use in the rest of the song
	sw,sh=SCREEN_WIDTH,SCREEN_HEIGHT --screen shortcuts
	dw,dh=DISPLAY:GetDisplayWidth(),DISPLAY:GetDisplayHeight() --display shortcuts
	scx,scy=SCREEN_CENTER_X,SCREEN_CENTER_Y
	
	function Plr(pn)
		return _G['P'..pn]
	end
	
end"
><children><ActorFrame Condition="nitg_version"
OnCommand="%function(self)
	if not string.find(string.lower(PREFSMAN:GetPreference('VideoRenderers')), 'opengl')
	or string.find(string.lower(PREFSMAN:GetPreference('VideoRenderers')), 'd3d')
	and string.find(string.lower(PREFSMAN:GetPreference('VideoRenderers')), 'opengl') 
	and string.find(string.lower(PREFSMAN:GetPreference('VideoRenderers')), 'd3d') < 
	string.find(string.lower(PREFSMAN:GetPreference('VideoRenderers')), 'opengl') then
		SCREENMAN:SystemMessage('D3D Video Renderer detected. Expect textures to fail.');
	end
end"
><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,1000"
	/>
	
	<!--load helper file. Read modhelpers.xml for more info-->
	<Layer File="modhelpers.xml" />
	
	<!--Load this on top of everything, obsolete as of nitg v3-->
	<ZZZLayer File="debugtext.xml" />
	
	<Layer
		Type="Quad"
		OnCommand="hidden,1"
		InitCommand="%function(self)
		
			checked = false;
			
			--ihis is obsolete as of nitg v3
			debug_show = false; --will display a few things such as: current second and beat, aux values and mods, loaded from debugtext.xml
			
			--more debug options
			timertype = 'seconds'; --seconds, minutes, hours (why)
			timercountdown = true; --countdown from totalsongtime
			timerrounding = true; --round the seconds, only available if timertype is set to seconds (for now)
			use_aux = false --display aux value? requires manual configuration
			
			init_modsp1 = '';
			init_modsp2 = '';
			
			mod_plr = {};
			
			mod_firstSeenBeat = GAMESTATE:GetSongBeat(); --necessary to prevent long freezes
			
---------------------------------------------------------------------------------------
----------------------Begin tables 'n stuff--------------------------------------------
---------------------------------------------------------------------------------------

			--beat based mods
			--{beat_start, beat_end, mods, len_or_end, player_number},
			mods = {
				{0,9999, '*99 2.5x,*99 -1000 cover','end'},
				{8,.25, '*20 200 drunk','len'},
				{16,44, '*99 beat','end'},
				{32,44, '*0.6 -250 tiny','end'},
				{44,48, '*2 dark,*2 stealth,*2 0.5x','end'},
				
				--i dont even know why i have to do this to make it sync to the beat, it's so stupid
				{49,107, '*99 500 beat,*99 -50.5 beatmult','end'},
				{107,152, '*99 500 beat,*99 -49.5 beatmult','end'},
				{152,173, '*99 500 beat,*99 -51.5 beatmult','end'},
				{173,183, '*99 500 beat,*99 -52.5 beatmult','end'},
				{183,189, '*99 500 beat,*99 -53.5 beatmult','end'},
				{189,193, '*99 500 beat,*99 -54.5 beatmult','end'},
				{193,195, '*99 500 beat,*99 -57.5 beatmult','end'},
				{195,197, '*99 500 beat,*99 -58.5 beatmult','end'},
				{197,199, '*99 500 beat,*99 -68.5 beatmult','end'},
				{199,208, '*99 500 beat,*99 -52.25 beatmult','end'},
				--
				{176,207, '*3 drunk','end'},
				{208,264, '*99 cover,*99 250 beat,*999 no beatmult','end'},
				{232,239, '*0.5 -250 tiny,*0.7 stealth','end'},
				{232,264, '*0.5 dark','end'}

			}
			
			
			curaction = 1;
			--{beat,thing,persists}
			mod_actions = {
				{264,function()
					
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:wag()
							a:effectperiod(5)
						end
					end
				end,true},
				{264,'Spin'},
				{296,'ending'}
			}
			
			local m,mm = mod_insert	,mod_message --table insert shortcuts
			
			for beat=0,44,1 do
				m(beat,0.5, '*10 200 tipsy','len')
				m(beat+.25,0.5, '*10 -200 tipsy','len')
				m(beat+.5,0.5, '*10 200 tipsy','len')
				m(beat+.75,0.5, '*10 -200 tipsy','len')
			end
			
			for beat=17,44,2 do
				m(beat,0.1, '*99 55 stealth','len')
			end
			
			for beat=49,207,2 do
				m(beat,2, '*5 '..(math.random(-45,45))..' rotationx,*5 '..(math.random(-45,45))..' rotationz,*5 '..(math.random(-45,75))..' rotationy,*5 '..(math.random(-100,100))..' movex,*5 '..(math.random(-100,100))..' movey','len',1)
				m(beat,2, '*5 '..(math.random(-45,45))..' rotationx,*5 '..(math.random(-45,45))..' rotationz,*5 '..(math.random(-45,75))..' rotationy,*5 '..(math.random(-100,100))..' movex,*5 '..(math.random(-50,50))..' movey','len',2)
			end
			
			for beat=112,144,1 do
				m(beat,0.1, '*6 55 stealth','len')
			end
			
			local colours_stealths = {'*99 stealthgg','*99 stealthgr','*99 stealthgb'}
				for beat=144,176,1 do
					m(beat,0.1,colours_stealths[math.random(1,table.getn(colours_stealths))],'len')
					m(beat,0.1, '*8 55 stealth','len')
				end
				for beat=177,206,1 do
					m(beat,0.1,colours_stealths[math.random(1,table.getn(colours_stealths))],'len')
					m(beat,0.1, '*16 stealth','len')
				end
				for beat=264,296,4 do
					m(beat,1,colours_stealths[math.random(1,table.getn(colours_stealths))],'len')
					m(beat,1, '*8 55 stealth','len')
				end
			
---------------------------------------------------------------------------------------
----------------------Sort the actions table-------------------------------------------
---------------------------------------------------------------------------------------
			
			function modtable_compare(a,b)
				return a[1] < b[1]
			end
			
			if table.getn(mod_actions) > 1 then
				table.sort(mod_actions, modtable_compare)
			end
			
---------------------------------------------------------------------------------------
----------------------End tables 'n stuff----------------------------------------------
---------------------------------------------------------------------------------------
			
			self:queuecommand('Update');
			
		end"
		
		UpdateCommand="%function(self)

			if GAMESTATE:GetSongBeat()>=0 and not checked then
			
				local ThingsToGrab = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame','Lyrics','SongBackground','SongForeground','Overlay','Underlay'}
				local ThingsToHide = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame','Overlay','Underlay'}
				
				for i,v in ipairs(ThingsToGrab) do
					_G[v] = SCREENMAN:GetTopScreen():GetChild(v) or nil
				end
				
				for i,v in ipairs(ThingsToHide) do
					if _G[v] then _G[v]:hidden(1) end
				end
				
				--name players, judgment and combo
				for pn=1,2 do
					table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP'..pn));
					_G['P'..pn] = SCREENMAN:GetTopScreen():GetChild('PlayerP'..pn) or nil;
					if _G['P'..pn] then
						_G['jud'..pn] = _G['P'..pn]:GetChild('Judgment');
						_G['com'..pn] = _G['P'..pn]:GetChild('Combo');
						_G['P'..pn..'x_origin'] = _G['P'..pn]:GetX();
						_G['P'..pn..'y_origin'] = _G['P'..pn]:GetY();
					end
				end
				
				screen = SCREENMAN:GetTopScreen();
				
				checked = true; --let this only run once
				
			end

			local beat = GAMESTATE:GetSongBeat()
			showmods='' --to not make the game f**k itself
			
---------------------------------------------------------------------------------------
----------------------Begin table handlers---------------------------------------------
---------------------------------------------------------------------------------------
			
			disable = false;
			if beat > mod_firstSeenBeat+0.1 and disable ~= true and checked then
				-----------------------
				-- Player mod resets --
				-----------------------
				for i=1,2 do
					mod_do('clearall',i)
				end
				
				------------------------------------------------------------------------------
				-- custom mod reader by TaroNuke edited by WinDEU and re-stolen by TaroNuke --
				------------------------------------------------------------------------------
				for i,v in pairs(mods) do
					if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
						if beat >=v[1] then
							if (v[4] == 'len' and beat <=v[1]+v[2]) or (v[4] == 'end' and beat <=v[2]) then
								if table.getn(v) == 5 then
									mod_do(v[3],v[5]);
								else
									mod_do(v[3]);
								end
								
								--to display the current mods; this is implemented in a really stupid way
								showmods = (string.format('%.3f',v[1]))..', '..(string.format('%.3f',v[2]))..', '..(v[3])..', '..(v[4])..' - ('..(tostring(v[5]))..')\n'..(showmods);
							end
						end
					else
						SCREENMAN:SystemMessage('Bad beatmod: {'..tostring(v[1])..','..tostring(v[2])..','..tostring(v[3])..','..tostring(v[4])..','..tostring(v[5])..'}');
						v[1] = 0;
						v[2] = 0;
						v[3] = '';
						v[4] = 'error';
					end
				end
				
				--------------------
				-- Perframe stuff --
				--------------------
				if beat > 264 and beat < 296 then
					GAMESTATE:ApplyGameCommand('mod,*10000 '..(-100*math.rad(XSPIN:GetX()))..' confusionyoffset')
					GAMESTATE:ApplyGameCommand('mod,*10000 '..((XSPIN:GetX()))..' rotationx')
				end
				
				----------------------------
				-- Functions and messages --
				----------------------------
				while curaction<=table.getn(mod_actions) and GAMESTATE:GetSongBeat()>=mod_actions[curaction][1] do
					if mod_actions[curaction][3] or GAMESTATE:GetSongBeat() < mod_actions[curaction][1]+2 then
						if type(mod_actions[curaction][2]) == 'function' then
							mod_actions[curaction][2]()
						elseif type(mod_actions[curaction][2]) == 'string' then
							MESSAGEMAN:Broadcast(mod_actions[curaction][2]);
						end
					end
					curaction = curaction+1;
				end
				
				--------------------
				-- Perframe stuff --
				--------------------				
			end
			
			self:sleep(0.02);
			self:queuecommand('Update');

---------------------------------------------------------------------------------------
----------------------end table handlers and perframe stuff----------------------------
---------------------------------------------------------------------------------------
			
		end"
	/>
	
	<Layer Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) XSPIN = self end"
	SpinMessageCommand="x,0;linear,(m_bl)*120;x,360*15" />
	
	<Layer
Type="Sprite"
Texture="transparent.png"
OnCommand="%function(self)
self:x(SCREEN_CENTER_X)
self:y(SCREEN_CENTER_Y)
self:basezoomx((SCREEN_WIDTH/DISPLAY:GetDisplayWidth()));
self:basezoomy(-1*(SCREEN_HEIGHT/DISPLAY:GetDisplayHeight()));
self:diffusealpha(0)
self:zoom(1)
self:queuecommand('renderMe');
end"

renderMeCommand="%function(self)
self:zoom(1)
self:SetTexture(myAft:GetTexture())
end"
endingMessageCommand="linear,3;diffusealpha,2;blend,add;zoom,2"
/>


        <Layer
Type="ActorFrameTexture"
OnCommand="%function(self)

    self:SetWidth(DISPLAY:GetDisplayWidth());
    self:SetHeight(DISPLAY:GetDisplayHeight());
    self:EnableDepthBuffer( true );
    self:EnableAlphaBuffer( true );
    self:EnableFloat( true );
    self:EnablePreserveTexture( true );
    self:hidden(0);
    self:diffusealpha(1);
    self:zoom(0.6)
    self:Create();
    myAft=self
end"
/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="It's late and I'm awake"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,40;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="staring at the wall"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,44;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="Open up my window"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,48;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="head floats out the door"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,51.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="No one else around"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,55.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="the shimmer takes my eye"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,59;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="I lift my head"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,63.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="blinded by the sky"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,67;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="Feel my weight in front"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,71;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="following the sound"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,75;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="Moves away so fast"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,78.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="fall down to the ground"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,82.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="I know there's more to come"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,86;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="jump back to my feet"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,90;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="Now I only see ahead of me"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,93.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.25;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="chasing down the street"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,97.5;linear,2;diffusealpha,0.5;sleep,1;linear,0.1;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="down the street"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,100.5;linear,2;diffusealpha,0.25;sleep,0.1;linear,0.1;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="down the street"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,102.5;linear,2;diffusealpha,0.25;sleep,0.1;linear,0.1;diffusealpha,0"
	/>
	
	<Actor
		Type="BitmapText"
		Font="_eurostile normal"
		Text="down the street"
		OnCommand="x,math.random(150,300);y,math.random(100,300);rotationz,math.random(-45,45);diffusealpha,0;sleep,104.5;linear,2;diffusealpha,0.25;sleep,0.1;linear,0.1;diffusealpha,0"
	/>
	
	<Layer
		File="background2"
		OnCommand="diffusealpha,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;ZoomToWidth,SCREEN_WIDTH;ZoomToHeight,SCREEN_HEIGHT;sleep,126.5;linear,1;diffusealpha,0.5;sleep,15;linear,1;diffusealpha,0"
	/>
</children></ActorFrame>